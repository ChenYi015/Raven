AWSTemplateFormatVersion: 2010-09-09
Description: NodeManager of hadoop cluster.
Parameters:
  Ec2KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to EC2 instances.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  Ec2InstanceType:
    Type: String
    Description: EC2 instance type.
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
  Ec2VolumeType:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSize:
    Type: Number
    Default: 30
    MinValue: 30
    MaxValue: 100
  S3Path:
    Description: S3 path for all needed jars and tars.
    Type: String
    Default: s3://chenyi-ap-southeast-1
  HadoopVersion:
    Description: Hadoop version.
    Type: String
    Default: 2.10.1
    AllowedValues:
      - 2.10.1
      - 3.2.0
  HadoopNodeManagerId:
    Description: ID of Hadoop NodeManager.
    Type: Number
    Default: 1
  HadoopFsDefaultName:
    Description: Default name for hadoop file system.
    Type: String
    Default: s3a://chenyi-ap-southeast-1
  HadoopFsS3aEndpoint:
    Description: S3a endpoint for hadoop file system.
    Type: String
    Default: s3.ap-southeast-1.amazonaws.com
  HiveVersion:
    Description: Hive version.
    Type: String
    Default: 2.3.9
Mappings:
  AWSInstanceType2Arch:
    t1.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.small:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.large:
      Arch: HVM64
    m1.small:
      Arch: HVM64
    m1.medium:
      Arch: HVM64
    m1.large:
      Arch: HVM64
    m1.xlarge:
      Arch: HVM64
    m2.xlarge:
      Arch: HVM64
    m2.2xlarge:
      Arch: HVM64
    m2.4xlarge:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m3.2xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    m5.large:
      Arch: HVM64
    m5.xlarge:
      Arch: HVM64
    m5.2xlarge:
      Arch: HVM64
    m5.4xlarge:
      Arch: HVM64
    m5.8xlarge:
      Arch: HVM64
    m5.12xlarge:
      Arch: HVM64
    m5.16xlarge:
      Arch: HVM64
    c1.medium:
      Arch: HVM64
    c1.xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    ap-southeast-1:
      HVM64: ami-07191cf2912e097a6
      HVMG2: ami-0e46ce0d6a87dc979
    ap-southeast-2:
      HVM64: ami-0ae99b503e8694028
      HVMG2: ami-0c0ab057a101d8ff2
    ca-central-1:
      HVM64: ami-0803e21a2ec22f953
      HVMG2: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-07a3f215cc90c889c
      HVMG2: NOT_SUPPORTED
    cn-northwest-1:
      HVM64: ami-0a3b3b10f714a0ff4
      HVMG2: NOT_SUPPORTED
    eu-central-1:
      HVM64: ami-0474863011a7d1541
      HVMG2: ami-0aa1822e3eb913a11
    eu-north-1:
      HVM64: ami-0de4b8910494dba0f
      HVMG2: ami-32d55b4c
    eu-south-1:
      HVM64: ami-08427144fe9ebdef6
      HVMG2: NOT_SUPPORTED
    eu-west-1:
      HVM64: ami-015232c01a82b847b
      HVMG2: ami-0d5299b1c6112c3c7
    eu-west-2:
      HVM64: ami-0765d48d7e15beb93
      HVMG2: NOT_SUPPORTED
    eu-west-3:
      HVM64: ami-0caf07637eda19d9c
      HVMG2: NOT_SUPPORTED
    me-south-1:
      HVM64: ami-0744743d80915b497
      HVMG2: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-0a52e8a6018e92bb0
      HVMG2: NOT_SUPPORTED
    us-east-1:
      HVM64: ami-032930428bf1abbff
      HVMG2: ami-0aeb704d503081ea6
    us-east-2:
      HVM64: ami-027cab9a7bf0155df
      HVMG2: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-088c153f74339f34c
      HVMG2: ami-0a7fc72dc0e51aa77
    us-west-2:
      HVM64: ami-01fee56b22f308154
      HVMG2: ami-0fe84a5b4563d8f27
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - Fn::FindInMap:
              - AWSInstanceType2Arch
              - !Ref Ec2InstanceType
              - Arch
      InstanceType: !Ref Ec2InstanceType
      IamInstanceProfile:
        Fn::ImportValue: !Join [ ":", [ "Raven", "IAM", "InstanceProfile" ] ]
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSize
            VolumeType: !Ref Ec2VolumeType
            DeleteOnTermination: true
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: True
          DeleteOnTermination: True
          SubnetId:
            Fn::ImportValue: !Join [ ":", [ "Raven", "EC2", "Subnet01" ] ]
          GroupSet:
            - Fn::ImportValue: !Join [ ":", [ "Raven", "EC2", "SecurityGroup" ] ]
      Tags:
        - Key: Name
          Value: !Join [ "", [ "Hadoop NodeManager ", !Ref HadoopNodeManagerId ] ]
      KeyName: !Ref Ec2KeyName
      UserData:
        Fn::Base64:
          Fn::Join:
            - ""
            - - |
                #!/bin/bash
              - Fn::Sub:
                  - |
                    s3_path=${S3Path}
                  - S3Path: !Ref S3Path
              - |
                aws s3 cp ${s3_path}/scripts/install-jdk-8u301.sh /root/
                bash /root/install-jdk-8u301.sh \
                  --user ec2-user \
                  --s3-path ${s3_path}
                source /home/ec2-user/.bash_profile
              - Fn::Sub:
                  - |
                    hadoop_version=${HadoopVersion}
                    fs_default_name=${FsDefaultName}
                    fs_s3a_endpoint=${FsS3aEndpoint}
                  - HadoopVersion: !Ref HadoopVersion
                    FsDefaultName: !Ref HadoopFsDefaultName
                    FsS3aEndpoint: !Ref HadoopFsS3aEndpoint
              - |
                aws s3 cp ${s3_path}/scripts/install-hadoop.sh /root/
                bash /root/install-hadoop.sh \
                  --user ec2-user \
                  --hadoop-version ${hadoop_version} \
                  --fs-default-name ${fs_default_name} \
                  --fs-s3a-endpoint ${fs_s3a_endpoint} \
                  --s3-path ${s3_path}
                source /home/ec2-user/.bash_profile
                sed -i -e 's,# export JAVA_HOME=,export JAVA_HOME=/home/ec2-user/java/jdk1.8.0_301,' \
                  ${HADOOP_HOME}/etc/hadoop/hadoop-env.sh
              - Fn::Sub:
                  - |
                    hive_version=${HiveVersion}
                    mysql_host=${MysqlHost}
                    mysql_user=${MysqlUser}
                    mysql_password=${MysqlPassword}
                  - HiveVersion: !Ref HiveVersion
                    MysqlHost:
                      Fn::ImportValue: !Join [ ":", [ "Raven", "Hive", "Metastore", "Host" ] ]
                    MysqlUser: hive
                    MysqlPassword: hive
              - |
                aws s3 cp ${s3_path}/scripts/install-hive.sh /root/
                bash /root/install-hive.sh \
                  --user ec2-user \
                  --hive-version ${hive_version} \
                  --mysql-host ${mysql_host} \
                  --mysql-username ${mysql_user} \
                  --mysql-password ${mysql_password} \
                  --s3-path ${s3_path}
                source /home/ec2-user/.bash_profile
                cp ${HIVE_HOME}/conf/hive-env.sh.template ${HIVE_HOME}/conf/hive-env.sh
                cat <<EOF >/root/script.sed
                s,# HADOOP_HOME=\${bin}/../../hadoop,HADOOP_HOME=/home/ec2-user/hadoop/hadoop-${hadoop_version},
                EOF
                sed -i -f script.sed ${HIVE_HOME}/conf/hive-env.sh
                rm /root/script.sed
Outputs:
  Ec2InstanceId:
    Description: Unique ID of EC2 instance.
    Value: !Ref Ec2Instance
  Ec2InstanceAvailabilityZone:
    Description: The Availability Zone where the specified instance is launched.
    Value: !GetAtt Ec2Instance.AvailabilityZone
  Ec2InstancePublicIp:
    Description: Public IP of EC2 instance.
    Value: !GetAtt Ec2Instance.PublicIp
  Ec2InstancePublicDnsName:
    Description: The public DNS name of the specified instance.
    Value: !GetAtt Ec2Instance.PublicDnsName
  Ec2InstancePrivateIp:
    Description: Private IP of EC2 instance.
    Value: !GetAtt Ec2Instance.PrivateIp
