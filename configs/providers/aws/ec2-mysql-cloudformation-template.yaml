AWSTemplateFormatVersion: 2010-09-09
Description: EC2 instance with MySQL.
Parameters:
  Ec2KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to EC2 instances.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
  InstanceType:
    Type: String
    Description: EC2 instance type.
    Default: m5.large
    AllowedValues:
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
  Ec2VolumeType:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSize:
    Type: Number
    Default: 30
    MinValue: 30
    MaxValue: 100
  DatabaseName:
    Description: Database name for MySQL.
    Type: String
    Default: hive
    MinLength: 1
    MaxLength: 64
    AllowedPattern: [a-zA-Z][a-zA-Z0-9]*
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DatabaseUsername:
    Description: Username for MySQL.
    Type: String
    Default: admin
    NoEcho:  true
    MinLength: 1
    MaxLength: 64
    AllowedPattern: [a-zA-Z][a-zA-Z0-9]*
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  DatabasePassword:
    Description: Password for MySQL.
    Type: String
    Default: admin
    NoEcho:  true
    MinLength: 1
    MaxLength: 41
    AllowedPattern: [a-zA-Z0-9]*
    ConstraintDescription: Must contain only alphanumeric characters.
  DatabaseRootPassword:
    Description: Root password for MySQL.
    Type: String
    Default: admin
    NoEcho:  true
    MinLength: 1
    MaxLength: 41
    AllowedPattern: [a-zA-Z0-9]*
    ConstraintDescription: Must contain only alphanumeric characters.
Mappings:
  AWSInstanceType2Arch:
    m5.large:
      Arch: HVM64
    m5.xlarge:
      Arch: HVM64
    m5.2xlarge:
      Arch: HVM64
    m5.4xlarge:
      Arch: HVM64
    m5.8xlarge:
      Arch: HVM64
    m5.12xlarge:
      Arch: HVM64
    m5.16xlarge:
      Arch: HVM64
  AWSRegionArch2AMI:
    cn-north-1:
      HVM64: ami-00ac27054b887ff5c
    cn-northwest-1:
      HVM64: ami-0135cb179d33fbe3e
    ap-southeast-1:
      HVM64: ami-07191cf2912e097a6
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              mysql: []
              mysql-server: []
              mysql-libs: []
          services:
            sysvinit:
              mysqld:
                enabled: true
                ensureRunning: true
    Properties:
      ImageId:
        Fn::FindInMap:
          - AWSRegionArch2AMI
          - !Ref AWS::Region
          - Fn::FindInMap:
              - AWSInstanceType2Arch
              - !Ref InstanceType
              - Arch
      InstanceType: !Ref InstanceType
      IamInstanceProfile:
        Fn::ImportValue: !Join [ ":", [ "Raven", "IAM", "InstanceProfile" ] ]
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSize
            VolumeType: !Ref Ec2VolumeType
            DeleteOnTermination: true
      NetworkInterfaces:
        - DeviceIndex: 0
          AssociatePublicIpAddress: True
          DeleteOnTermination: True
          SubnetId:
            Fn::ImportValue: !Join [ ":", [ "Raven", "EC2", "Subnet01" ] ]
          GroupSet:
            - Fn::ImportValue: !Join [ ":", [ "Raven", "EC2", "SecurityGroup" ] ]
      Tags:
        - Key: Name
          Value: Test Instance
      KeyName: !Ref Ec2KeyName
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe

              # Install files and packages specified in the metadata.
              yum install -y aws-cfn-bootstrap
              /opt/aws/bin/cfn-init -v \
                  --region ${Region} \
                  --stack ${StackName} \
                  --resource Ec2Instance

              # Setup MySQL root password and create a user.
              mysqladmin -u root password ${DatabaseRootPassword}
              mysql -u root --password=${DatabasePassword}

            - StackName: !Ref AWS::StackName
              Region: !Ref AWS::Region
              DatabaseRootPassword: !Ref DatabaseRootPassword
              DatabasePassword: !Ref DatabasePassword
Outputs:
  Ec2InstanceId:
    Description: Unique ID of EC2 instance.
    Value: !Ref Ec2Instance
  Ec2InstanceAvailabilityZone:
    Description: The Availability Zone where the specified instance is launched.
    Value: !GetAtt Ec2Instance.AvailabilityZone
  Ec2InstancePublicIp:
    Description: Public IP of EC2 instance.
    Value: !GetAtt Ec2Instance.PublicIp
  Ec2InstancePublicDnsName:
    Description: The public DNS name of the specified instance.
    Value: !GetAtt Ec2Instance.PublicDnsName
  Ec2InstancePrivateIp:
    Description: Private IP of EC2 instance.
    Value: !GetAtt Ec2Instance.PrivateIp
  DatabaseName:
    Description: Name of MySQL database.
    Value: !Ref DatabaseName
  DatabaseUsername:
    Description: Username for MySQL.
    Value: !Ref DatabaseUsername
