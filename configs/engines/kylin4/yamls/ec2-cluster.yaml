AWSTemplateFormatVersion: 2010-09-09
Description: Create Cluster for ec2 instances and deploy related services, hadoop/spark/zookeeper/hive/jdk/kylin4
Parameters:
  # Must passed Parameters
  PublicSubnetID:
    Type: String
  SecurityGroupID:
    Type: String
  ClusterType:
    Type: String
    Default: Test
    AllowedValues:
      - BuildCluster
      - ReadCluster
      - Test
  FirstCreate:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  EMREc2KeyName:
    Type: String
    Default: kylin4-xtt-emr-5.33

#   Optional Parameters
  BucketFullPath:
    Type: String
    Default: s3://xiaoxiang-yu/kylin-xtt
  BucketPath:
    Type: String
    Default: /xiaoxiang-yu/kylin-xtt
    Description: Url without prefix s3:/
  MasterScriptFileName:
    Type: String
    Default: prepare-ec2-env-for-kylin4-master.sh
  Ec2OperationRole:
    Type: String
    Default: Ec2Kylin4BenchmarkRole
    Description: Should be created by pre-step
  SlaveScriptFileName:
    Type: String
    Default: prepare-ec2-env-for-kylin4-slave.sh
  InstanceType:
    Description: EC2 instance type
    Type: String
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.2xlarge
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
  Ec2VolumnTypeForJumpserver:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSizeForJumpserver:
    Type: Number
    Default: 10
    MinValue: 10
    MaxValue: 30
  Ec2VolumnTypeForMasterNode:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSizeForMasterNode:
    Type: Number
    Default: 30
    MinValue: 30
    MaxValue: 50
  Ec2VolumnTypeForSlaveNode:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSizeForSlaveNode:
    Type: Number
    Default: 30
    MinValue: 30
    MaxValue: 50


Mappings:
  AWSRegionArch2AMI:
    cn-north-1:
      HVMebs: ami-00ac27054b887ff5c
    cn-northwest-1:
      HVMebs: ami-0135cb179d33fbe3e

Conditions:
  NotNullSubnetID:
    !Not [!Equals [!Ref PublicSubnetID, ""]]
  NotNullEc2KeyName:
    !Not [!Equals [!Ref EMREc2KeyName, ""]]
  ValidConfigurationForEc2: !And
    - !Condition NotNullSubnetID
    - !Condition NotNullEc2KeyName
  IsBuildCluster: !Equals [!Ref ClusterType, "BuildCluster"]
  IsTestCluster: !Equals [!Ref ClusterType, "Test"]
  IsFirstCreate: !Equals [!Ref FirstCreate, "true"]
  BuildJumpserverNode: !And
    - !Condition IsFirstCreate
    - !Condition ValidConfigurationForEc2

  # Build Test Master Node Condition used in Master Instance
  # Usage: if you set this condition to instance, then mark ClusterType: 'Test' to create instance
  BuildMasterTestNode: !Or
    - !Condition IsTestCluster
    - !Condition ValidConfigurationForEc2

  BuildSlaveNodes: !And
    - !Condition ValidConfigurationForEc2
    - !Condition IsBuildCluster

  # Same as BuildMasterTestNode
  BuildSlaveTestNodes: !Or
    - !Condition IsTestCluster
    - !Condition BuildSlaveNodes

Resources:
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    DeletionPolicy: Delete
    Properties:
      Roles:
        - !Ref Ec2OperationRole

  Ec2InstanceOfMaster:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    Condition: BuildMasterTestNode
    Properties:
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVMebs
      Tags:
        - Key: Cost Center
          Value: OS
        - Key: Project
          Value: Kylin4
        - Key: Owner
          Value: tengting.xu@kyligence.io
        - Key: Name
          Value: !Join
            - ''
            - - Master Node for
              - !Ref ClusterType
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for Master node in benchmark
          DeleteOnTermination: true
          AssociatePublicIpAddress: !If [IsTestCluster, true, false ]
          SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref SecurityGroupID
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSizeForMasterNode
            VolumeType: !Ref Ec2VolumnTypeForMasterNode
            DeleteOnTermination: true
      KeyName: !Ref EMREc2KeyName
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe
              cd /home/ec2-user
              aws s3 cp ${PrivateBucketFullPath}/scripts/${PrivateMasterScriptFileName} . --region ${PrivateRegion}
              bash ${PrivateMasterScriptFileName} --bucket-url ${PrivateBucketPath} --region ${PrivateRegion}
              echo " Master is ready ..."
            - PrivateBucketFullPath: !Ref BucketFullPath
              PrivateMasterScriptFileName: !Ref MasterScriptFileName
              PrivateBucketPath: !Ref BucketPath
              PrivateRegion: !Ref AWS::Region
  Ec2InstanceOfSlave01:
    Type: AWS::EC2::Instance
    DependsOn: Ec2InstanceOfMaster
    DeletionPolicy: Delete
    Condition: BuildSlaveTestNodes
    Description: default slave01 node is created for query or build
    Properties:
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVMebs
      Tags:
        - Key: Cost Center
          Value: OS
        - Key: Project
          Value: Kylin4
        - Key: Owner
          Value: tengting.xu@kyligence.io
        - Key: Name
          Value: !Join
            - ''
            - - Slave01 Node for
              - !Ref ClusterType
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for Slave01 node in benchmark
          DeleteOnTermination: true
          AssociatePublicIpAddress: !If [IsTestCluster, true, false ]
          SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref SecurityGroupID
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSizeForSlaveNode
            VolumeType: !Ref Ec2VolumnTypeForSlaveNode
            DeleteOnTermination: true
      KeyName: !Ref EMREc2KeyName
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe
              cd /home/ec2-user
              aws s3 cp ${PrivateBucketFullPath}/scripts/${PrivateSlaveScriptFileName} . --region ${PrivateRegion}
              bash ${PrivateSlaveScriptFileName} --bucket-url ${PrivateBucketPath} --master-host ${PrivateMasterHost} --worker-number ${WorkerNum} --region ${PrivateRegion}
            - PrivateMasterHost: !GetAtt Ec2InstanceOfMaster.PrivateIp
              WorkerNum: 1
              PrivateBucketFullPath: !Ref BucketFullPath
              PrivateSlaveScriptFileName: !Ref SlaveScriptFileName
              PrivateBucketPath: !Ref BucketPath
              PrivateRegion: !Ref AWS::Region
  Ec2InstanceOfSlave02:
    Type: AWS::EC2::Instance
    DependsOn: Ec2InstanceOfMaster
    DeletionPolicy: Delete
    Condition: BuildSlaveNodes
    Properties:
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVMebs
      Tags:
        - Key: Cost Center
          Value: OS
        - Key: Project
          Value: Kylin4
        - Key: Owner
          Value: tengting.xu@kyligence.io
        - Key: Name
          Value: !Join
            - ''
            - - Slave02 Node for
              - !Ref ClusterType
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for Slave02 node in benchmark
          DeleteOnTermination: true
          AssociatePublicIpAddress: !If [IsTestCluster, true, false ]
          SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref SecurityGroupID
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSizeForSlaveNode
            VolumeType: !Ref Ec2VolumnTypeForSlaveNode
            DeleteOnTermination: true
      KeyName: !Ref EMREc2KeyName
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe
              cd /home/ec2-user
              aws s3 cp ${PrivateBucketFullPath}/scripts/${PrivateSlaveScriptFileName} . --region ${PrivateRegion}
              bash ${PrivateSlaveScriptFileName} --bucket-url ${PrivateBucketPath} --master-host ${PrivateMasterHost} --worker-number ${WorkerNum} --region ${PrivateRegion}
            - PrivateMasterHost: !GetAtt Ec2InstanceOfMaster.PrivateIp
              WorkerNum: 2
              PrivateBucketFullPath: !Ref BucketFullPath
              PrivateSlaveScriptFileName: !Ref SlaveScriptFileName
              PrivateBucketPath: !Ref BucketPath
              PrivateRegion: !Ref AWS::Region
  Ec2InstanceOfSlave03:
    Type: AWS::EC2::Instance
    DependsOn: Ec2InstanceOfMaster
    DeletionPolicy: Delete
    Condition: BuildSlaveNodes
    Properties:
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVMebs
      Tags:
        - Key: Cost Center
          Value: OS
        - Key: Project
          Value: Kylin4
        - Key: Owner
          Value: tengting.xu@kyligence.io
        - Key: Name
          Value: !Join
            - ''
            - - Slave03 Node for
              - !Ref ClusterType
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for Slave03 node in benchmark
          DeleteOnTermination: true
          AssociatePublicIpAddress: !If [IsTestCluster, true, false ]
          SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref SecurityGroupID
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSizeForSlaveNode
            VolumeType: !Ref Ec2VolumnTypeForSlaveNode
            DeleteOnTermination: true
      KeyName: !Ref EMREc2KeyName
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe
              cd /home/ec2-user
              aws s3 cp ${PrivateBucketFullPath}/scripts/${PrivateSlaveScriptFileName} . --region ${PrivateRegion}
              bash ${PrivateSlaveScriptFileName} --bucket-url ${PrivateBucketPath} --master-host ${PrivateMasterHost} --worker-number ${WorkerNum} --region ${PrivateRegion}
            - PrivateMasterHost: !GetAtt Ec2InstanceOfMaster.PrivateIp
              WorkerNum: 3
              PrivateBucketFullPath: !Ref BucketFullPath
              PrivateSlaveScriptFileName: !Ref SlaveScriptFileName
              PrivateBucketPath: !Ref BucketPath
              PrivateRegion: !Ref AWS::Region
  Ec2InstanceOfJumpServer:
    Type: AWS::EC2::Instance
    DeletionPolicy: Delete
    Condition: BuildJumpserverNode
    Properties:
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVMebs
      Tags:
        - Key: Cost Center
          Value: OS
        - Key: Project
          Value: Kylin4
        - Key: Owner
          Value: tengting.xu@kyligence.io
        - Key: Name
          Value: !Join
            - ''
            - - JumpServer Node for
              - !Ref ClusterType
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref Ec2InstanceProfile
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for jumpserver node in benchmark
          DeleteOnTermination: true
          AssociatePublicIpAddress: true
          SubnetId: !Ref PublicSubnetID
          GroupSet:
            - !Ref SecurityGroupID

      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: !Ref Ec2VolumeSizeForJumpserver
            VolumeType: !Ref Ec2VolumnTypeForJumpserver
            DeleteOnTermination: true
      KeyName: !Ref EMREc2KeyName

Outputs:
  ClusterType:
    Description: the bool value for current cluster type
    Value: !Ref ClusterType

  JumpserverEc2InstanceId:
    Description: the id of Jumpserver Node Innstance
    Value: !Ref Ec2InstanceOfJumpServer
    Condition: BuildJumpserverNode
  JumpserverPrivateIp:
    Description: Jumpserver Private IP
    Value: !GetAtt Ec2InstanceOfJumpServer.PrivateIp
    Condition: BuildJumpserverNode
  JumpserverPublicIp:
    Description: Jumpserver Public IP
    Value: !GetAtt Ec2InstanceOfJumpServer.PublicIp
    Condition: BuildJumpserverNode

  MasterEc2InstanceId:
    Description: the id of Master Node Innstance
    Value: !Ref Ec2InstanceOfMaster
  MasterEc2InstancePrivateIp:
    Description: Master Instance Private IP
    Value: !GetAtt Ec2InstanceOfMaster.PrivateIp
  MasterEc2InstancePublicIp:
    Description: Master Instance Public IP
    Value: !GetAtt Ec2InstanceOfMaster.PublicIp

  Slave01Ec2InstanceId:
    Description: the id of Slave 01 Node Instance if created
    Value: !Ref Ec2InstanceOfSlave01
    Condition: BuildSlaveTestNodes
  Slave01Ec2InstancePrivateIp:
    Description: Slave01 Instance Private IP
    Value: !GetAtt Ec2InstanceOfSlave01.PrivateIp
    Condition: BuildSlaveTestNodes
  Slave01Ec2InstancePublicIp:
    Description: Slave01 Instance Public IP
    Value: !GetAtt Ec2InstanceOfSlave01.PublicIp
    Condition: BuildSlaveTestNodes

  Slave02Ec2InstanceId:
    Description: the id of Slave 02 Node Instance if created
    Value: !Ref Ec2InstanceOfSlave02
    Condition: BuildSlaveNodes
  Slave02Ec2InstancePrivateIp:
    Description: Slave02 Instance Private IP
    Value: !GetAtt Ec2InstanceOfSlave02.PrivateIp
    Condition: BuildSlaveNodes

  Slave03Ec2InstanceId:
    Description: the id of Slave 03 Node Instance if created
    Value: !Ref Ec2InstanceOfSlave03
    Condition: BuildSlaveNodes
  Slave03Ec2InstancePrivateIp:
    Description: Slave03 Instance Private IP
    Value: !GetAtt Ec2InstanceOfSlave03.PrivateIp
    Condition: BuildSlaveNodes
