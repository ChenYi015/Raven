Queries:
  - Name: Q1
    Description: Query 1
    SQL: |
      SELECT l_returnflag, l_linestatus, SUM(l_quantity) AS sum_qty
          , SUM(l_extendedprice) AS sum_base_price, SUM(l_saleprice) AS sum_disc_price
          , SUM(l_saleprice) + SUM(l_taxprice) AS sum_charge
          , AVG(l_quantity) AS avg_qty, AVG(l_extendedprice) AS avg_price
          , AVG(l_discount) AS avg_disc, COUNT(*) AS count_order
      FROM v_lineitem
      WHERE l_shipdate <= '1998-09-16'
      GROUP BY l_returnflag, l_linestatus
      ORDER BY l_returnflag, l_linestatus
  - Name: Q2
    Description: Query 2
    SQL: |
      WITH q2_min_ps_supplycost AS (
          SELECT p_partkey AS min_p_partkey, MIN(ps_supplycost) AS min_ps_supplycost
          FROM v_partsupp
              INNER JOIN part ON p_partkey = ps_partkey
              INNER JOIN supplier ON s_suppkey = ps_suppkey
              INNER JOIN nation ON s_nationkey = n_nationkey
              INNER JOIN region ON n_regionkey = r_regionkey
          WHERE r_name = 'EUROPE'
          GROUP BY p_partkey
      )
      SELECT s_acctbal, s_name, n_name, p_partkey, p_mfgr
          , s_address, s_phone, s_comment
      FROM v_partsupp
          INNER JOIN part ON p_partkey = ps_partkey
          INNER JOIN supplier ON s_suppkey = ps_suppkey
          INNER JOIN nation ON s_nationkey = n_nationkey
          INNER JOIN region ON n_regionkey = r_regionkey
          INNER JOIN q2_min_ps_supplycost
          ON ps_supplycost = min_ps_supplycost
              AND p_partkey = min_p_partkey
      WHERE p_size = 37
          AND p_type LIKE '%COPPER'
          AND r_name = 'EUROPE'
      ORDER BY s_acctbal DESC, n_name, s_name, p_partkey
      LIMIT 100
  - Name: Q3
    Description: Query 3
    SQL: |
      SELECT l_orderkey, SUM(l_saleprice) AS revenue, o_orderdate, o_shippriority
      FROM v_lineitem
      	INNER JOIN v_orders ON l_orderkey = o_orderkey
      	INNER JOIN customer ON c_custkey = o_custkey
      WHERE c_mktsegment = 'BUILDING'
      	AND o_orderdate < '1995-03-22'
      	AND l_shipdate > '1995-03-22'
      GROUP BY l_orderkey, o_orderdate, o_shippriority
      ORDER BY revenue DESC, o_orderdate
      LIMIT 10
  - Name: Q4
    Description: Query 4
    SQL: |
      SELECT o_orderpriority, COUNT(*) AS order_count
      FROM (
      	SELECT l_orderkey, o_orderpriority
      	FROM v_lineitem
      		INNER JOIN v_orders ON l_orderkey = o_orderkey
      	WHERE o_orderdate >= '1996-05-01'
      		AND o_orderdate < '1996-08-01'
      		AND l_receiptdelayed = 1
      	GROUP BY l_orderkey, o_orderpriority
      ) t
      GROUP BY t.o_orderpriority
      ORDER BY t.o_orderpriority
  - Name: Q5
    Description: Query 5
    SQL: |
      SELECT sn.n_name, SUM(l_saleprice) AS revenue
      FROM v_lineitem
      	INNER JOIN v_orders ON l_orderkey = o_orderkey
      	INNER JOIN customer ON o_custkey = c_custkey
      	INNER JOIN nation cn ON c_nationkey = cn.n_nationkey
      	INNER JOIN supplier ON l_suppkey = s_suppkey
      	INNER JOIN nation sn ON s_nationkey = sn.n_nationkey
      	INNER JOIN region ON sn.n_regionkey = r_regionkey
      WHERE r_name = 'AFRICA'
      	AND cn.n_name = sn.n_name
      	AND o_orderdate >= '1993-01-01'
      	AND o_orderdate < '1994-01-01'
      GROUP BY sn.n_name
      ORDER BY revenue DESC
  - Name: Q6
    Description: Query 6
    SQL: |
      SELECT SUM(l_extendedprice) - SUM(l_saleprice) AS revenue
      FROM v_lineitem
      WHERE l_shipdate >= '1993-01-01'
      	AND l_shipdate < '1994-01-01'
      	AND l_discount BETWEEN 0.06 - 0.01 AND 0.06 + 0.01
      	AND l_quantity < 25
  - Name: Q7
    Description: Query 7
    SQL: |
      SELECT supp_nation, cust_nation, l_year, SUM(volume) AS revenue
      FROM (
      	SELECT n1.n_name AS supp_nation, n2.n_name AS cust_nation, l_shipyear AS l_year, l_saleprice AS volume
      	FROM v_lineitem
      		INNER JOIN supplier ON s_suppkey = l_suppkey
      		INNER JOIN v_orders ON l_orderkey = o_orderkey
      		INNER JOIN customer ON o_custkey = c_custkey
      		INNER JOIN nation n1 ON s_nationkey = n1.n_nationkey
      		INNER JOIN nation n2 ON c_nationkey = n2.n_nationkey
      	WHERE ((n1.n_name = 'KENYA'
      				AND n2.n_name = 'PERU')
      			OR (n1.n_name = 'PERU'
      				AND n2.n_name = 'KENYA'))
      		AND l_shipdate BETWEEN '1995-01-01' AND '1996-12-31'
      ) shipping
      GROUP BY supp_nation, cust_nation, l_year
      ORDER BY supp_nation, cust_nation, l_year
  - Name: Q8
    Description: Query 8
    SQL: |
      WITH all_nations AS (
      		SELECT o_orderyear AS o_year, l_saleprice AS volume, n2.n_name AS nation
      		FROM v_lineitem
      			INNER JOIN part ON l_partkey = p_partkey
      			INNER JOIN supplier ON l_suppkey = s_suppkey
      			INNER JOIN v_orders ON l_orderkey = o_orderkey
      			INNER JOIN customer ON o_custkey = c_custkey
      			INNER JOIN nation n1 ON c_nationkey = n1.n_nationkey
      			INNER JOIN nation n2 ON s_nationkey = n2.n_nationkey
      			INNER JOIN region ON n1.n_regionkey = r_regionkey
      		WHERE r_name = 'AMERICA'
      			AND o_orderdate BETWEEN '1995-01-01' AND '1996-12-31'
      			AND p_type = 'ECONOMY BURNISHED NICKEL'
      	),
      	peru AS (
      		SELECT o_year, SUM(volume) AS peru_volume
      		FROM all_nations
      		WHERE nation = 'PERU'
      		GROUP BY o_year
      	),
      	all_data AS (
      		SELECT o_year, SUM(volume) AS all_volume
      		FROM all_nations
      		GROUP BY o_year
      	)
      SELECT peru.o_year, peru_volume / all_volume AS mkt_share
      FROM peru
      	INNER JOIN all_data ON peru.o_year = all_data.o_year
  - Name: Q9
    Description: Query 9
    SQL: |
      SELECT nation, o_year
      	, SUM(volume) - SUM(cost) AS sum_profit
      FROM (
      	SELECT n_name AS nation, o_orderyear AS o_year, l_saleprice AS volume, l_supplycost AS cost
      	FROM v_lineitem
      		INNER JOIN part ON l_partkey = p_partkey
      		INNER JOIN supplier ON l_suppkey = s_suppkey
      		INNER JOIN v_partsupp
      		ON l_suppkey = ps_suppkey
      			AND l_partkey = ps_partkey
      		INNER JOIN v_orders ON l_orderkey = o_orderkey
      		INNER JOIN nation ON s_nationkey = n_nationkey
      	WHERE p_name LIKE '%plum%'
      ) profit
      GROUP BY nation, o_year
      ORDER BY nation, o_year DESC
  - Name: Q10
    Description: Query 10
    SQL: |
      SELECT c_custkey, c_name, SUM(l_saleprice) AS revenue, c_acctbal
      	, n_name, c_address, c_phone, c_comment
      FROM v_lineitem
      	INNER JOIN v_orders ON l_orderkey = o_orderkey
      	INNER JOIN customer ON c_custkey = o_custkey
      	INNER JOIN nation ON c_nationkey = n_nationkey
      WHERE o_orderdate >= '1993-07-01'
      	AND o_orderdate < '1993-10-01'
      	AND l_returnflag = 'R'
      GROUP BY c_custkey, c_name, c_acctbal, c_phone, n_name, c_address, c_comment
      ORDER BY revenue DESC
      LIMIT 20
  - Name: Q11
    Description: Query 11
    SQL: |
      WITH q11_part_tmp_cached AS (
      		SELECT ps_partkey, SUM(ps_partvalue) AS part_value
      		FROM v_partsupp
      			INNER JOIN supplier ON ps_suppkey = s_suppkey
      			INNER JOIN nation ON s_nationkey = n_nationkey
      		WHERE n_name = 'GERMANY'
      		GROUP BY ps_partkey
      	),
      	q11_sum_tmp_cached AS (
      		SELECT SUM(part_value) AS total_value
      		FROM q11_part_tmp_cached
      	)
      SELECT ps_partkey, part_value
      FROM (
      	SELECT ps_partkey, part_value, total_value
      	FROM q11_part_tmp_cached, q11_sum_tmp_cached
      ) a
      WHERE part_value > total_value * 0.0001
      ORDER BY part_value DESC
  - Name: Q12
    Description: Query 12
    SQL: |
      WITH in_scope_data AS (
      		SELECT l_shipmode, o_orderpriority
      		FROM v_lineitem
      			INNER JOIN v_orders ON l_orderkey = o_orderkey
      		WHERE l_shipmode IN ('REG AIR', 'MAIL')
      			AND l_receiptdelayed = 1
      			AND l_shipdelayed = 0
      			AND l_receiptdate >= '1995-01-01'
      			AND l_receiptdate < '1996-01-01'
      	),
      	all_l_shipmode AS (
      		SELECT DISTINCT l_shipmode
      		FROM in_scope_data
      	),
      	high_line AS (
      		SELECT l_shipmode, COUNT(*) AS high_line_count
      		FROM in_scope_data
      		WHERE o_orderpriority = '1-URGENT'
      			OR o_orderpriority = '2-HIGH'
      		GROUP BY l_shipmode
      	),
      	low_line AS (
      		SELECT l_shipmode, COUNT(*) AS low_line_count
      		FROM in_scope_data
      		WHERE o_orderpriority <> '1-URGENT'
      			AND o_orderpriority <> '2-HIGH'
      		GROUP BY l_shipmode
      	)
      SELECT al.l_shipmode, hl.high_line_count, ll.low_line_count
      FROM all_l_shipmode al
      	LEFT JOIN high_line hl ON al.l_shipmode = hl.l_shipmode
      	LEFT JOIN low_line ll ON al.l_shipmode = ll.l_shipmode
      ORDER BY al.l_shipmode
  - Name: Q13
    Description: Query 13
    SQL: |
      SELECT c_count, COUNT(*) AS custdist
      FROM (
      	SELECT c_custkey, COUNT(DISTINCT o_orderkey) AS c_count
      	FROM customer
      		LEFT JOIN v_orders ON c_custkey = o_custkey
      	WHERE o_comment NOT LIKE '%unusual%accounts%'
      	GROUP BY c_custkey
      ) c_orders
      GROUP BY c_count
      ORDER BY custdist DESC, c_count DESC
  - Name: Q14
    Description: Query 14
    SQL: |
      WITH total AS (
      		SELECT SUM(l_saleprice) AS total_saleprice
      		FROM v_lineitem
      			INNER JOIN part ON l_partkey = p_partkey
      		WHERE l_shipdate >= '1995-08-01'
      			AND l_shipdate < '1995-09-01'
      	),
      	promo AS (
      		SELECT SUM(l_saleprice) AS promo_saleprice
      		FROM v_lineitem
      			INNER JOIN part ON l_partkey = p_partkey
      		WHERE l_shipdate >= '1995-08-01'
      			AND l_shipdate < '1995-09-01'
      			AND p_type LIKE 'PROMO%'
      	)
      SELECT 100.00 * promo_saleprice / total_saleprice
      FROM promo, total
  - Name: Q15
    Description: Query 15
    SQL: |
      WITH revenue_cached AS (
      		SELECT s_suppkey, s_name, s_address, s_phone
      			, SUM(l_saleprice) AS total_revenue
      		FROM v_lineitem
      			INNER JOIN supplier ON s_suppkey = l_suppkey
      		WHERE l_shipdate >= '1996-01-01'
      			AND l_shipdate < '1996-04-01'
      		GROUP BY s_suppkey, s_name, s_address, s_phone
      	),
      	max_revenue_cached AS (
      		SELECT MAX(total_revenue) AS max_revenue
      		FROM revenue_cached
      	)
      SELECT s_suppkey, s_name, s_address, s_phone, total_revenue
      FROM revenue_cached
      	INNER JOIN max_revenue_cached ON total_revenue = max_revenue
      ORDER BY s_suppkey
  - Name: Q16
    Description: Query 16
    SQL: |
      SELECT p_brand, p_type, p_size, COUNT(DISTINCT ps_suppkey) AS supplier_cnt
      FROM v_partsupp
      	INNER JOIN part ON p_partkey = ps_partkey
      	INNER JOIN (
      		SELECT s_suppkey
      		FROM supplier
      		WHERE s_comment NOT LIKE '%Customer%Complaints%'
      	)
      	ON ps_suppkey = s_suppkey
      WHERE p_brand <> 'Brand#34'
      	AND p_type NOT LIKE 'ECONOMY BRUSHED%'
      	AND p_size IN (22, 14, 27, 49, 21, 33, 35, 28)
      GROUP BY p_brand, p_type, p_size
      ORDER BY supplier_cnt DESC, p_brand, p_type, p_size
  - Name: Q17
    Description: Query 17
    SQL: |
      WITH q17_avg AS (
      		SELECT l_partkey, 0.2 * AVG(l_quantity) AS t_avg_quantity
      		FROM v_lineitem
      			INNER JOIN part ON l_partkey = p_partkey
      		WHERE p_brand = 'Brand#23'
      			AND p_container = 'MED BOX'
      		GROUP BY l_partkey
      	)
      SELECT CAST(SUM(l_extendedprice) / 7.0 AS decimal(32, 2)) AS avg_yearly
      FROM v_lineitem
      	INNER JOIN part ON l_partkey = p_partkey
      	INNER JOIN q17_avg ON q17_avg.l_partkey = v_lineitem.l_partkey
      WHERE p_brand = 'Brand#23'
      	AND p_container = 'MED BOX'
      	AND l_quantity < t_avg_quantity
  - Name: Q18
    Description: Query 18
    SQL: |
      SELECT c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice
      	, SUM(l_quantity)
      FROM v_lineitem
      	INNER JOIN v_orders ON l_orderkey = o_orderkey
      	INNER JOIN customer ON o_custkey = c_custkey
      WHERE o_orderkey IS NOT NULL
      GROUP BY c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice
      HAVING SUM(l_quantity) > 300
      ORDER BY o_totalprice DESC, o_orderdate
      LIMIT 100
  - Name: Q19
    Description: Query 19
    SQL: |
      SELECT SUM(l_saleprice) AS revenue
      FROM v_lineitem
      	INNER JOIN part ON l_partkey = p_partkey
      WHERE (p_brand = 'Brand#32'
      		AND p_container IN ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')
      		AND l_quantity >= 7
      		AND l_quantity <= 7 + 10
      		AND p_size BETWEEN 1 AND 5
      		AND l_shipmode IN ('AIR', 'AIR REG')
      		AND l_shipinstruct = 'DELIVER IN PERSON')
      	OR (p_brand = 'Brand#35'
      		AND p_container IN ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')
      		AND l_quantity >= 15
      		AND l_quantity <= 15 + 10
      		AND p_size BETWEEN 1 AND 10
      		AND l_shipmode IN ('AIR', 'AIR REG')
      		AND l_shipinstruct = 'DELIVER IN PERSON')
      	OR (p_brand = 'Brand#24'
      		AND p_container IN ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')
      		AND l_quantity >= 26
      		AND l_quantity <= 26 + 10
      		AND p_size BETWEEN 1 AND 15
      		AND l_shipmode IN ('AIR', 'AIR REG')
      		AND l_shipinstruct = 'DELIVER IN PERSON')
  - Name: Q20
    Description: Query 20
    SQL: |
      WITH tmp3 AS (
      		SELECT l_partkey, 0.5 * SUM(l_quantity) AS sum_quantity, l_suppkey
      		FROM v_lineitem
      			INNER JOIN supplier ON l_suppkey = s_suppkey
      			INNER JOIN nation ON s_nationkey = n_nationkey
      			INNER JOIN part ON l_partkey = p_partkey
      		WHERE l_shipdate >= '1994-01-01'
      			AND l_shipdate <= '1995-01-01'
      			AND n_name = 'CANADA'
      			AND p_name LIKE 'forest%'
      		GROUP BY l_partkey, l_suppkey
      	)
      SELECT s_name, s_address
      FROM v_partsupp
      	INNER JOIN supplier ON ps_suppkey = s_suppkey
      	INNER JOIN tmp3
      	ON ps_partkey = l_partkey
      		AND ps_suppkey = l_suppkey
      WHERE ps_availqty > sum_quantity
      GROUP BY s_name, s_address
      ORDER BY s_name
  - Name: Q21
    Description: Query 21
    SQL: |
      SELECT s_name, COUNT(*) AS numwait
      FROM (
      	SELECT l1.l_suppkey, s_name, l1.l_orderkey
      	FROM v_lineitem l1
      		INNER JOIN v_orders ON l1.l_orderkey = o_orderkey
      		INNER JOIN supplier ON l1.l_suppkey = s_suppkey
      		INNER JOIN nation ON s_nationkey = n_nationkey
      		INNER JOIN (
      			SELECT l_orderkey, COUNT(DISTINCT l_suppkey)
      			FROM v_lineitem
      				INNER JOIN v_orders ON l_orderkey = o_orderkey
      			WHERE o_orderstatus = 'F'
      			GROUP BY l_orderkey
      			HAVING COUNT(DISTINCT l_suppkey) > 1
      		) l2
      		ON l1.l_orderkey = l2.l_orderkey
      		INNER JOIN (
      			SELECT l_orderkey, COUNT(DISTINCT l_suppkey)
      			FROM v_lineitem
      				INNER JOIN v_orders ON l_orderkey = o_orderkey
      			WHERE o_orderstatus = 'F'
      				AND l_receiptdelayed = 1
      			GROUP BY l_orderkey
      			HAVING COUNT(DISTINCT l_suppkey) = 1
      		) l3
      		ON l1.l_orderkey = l3.l_orderkey
      	WHERE o_orderstatus = 'F'
      		AND l_receiptdelayed = 1
      		AND n_name = 'SAUDI ARABIA'
      	GROUP BY l1.l_suppkey, s_name, l1.l_orderkey
      )
      GROUP BY s_name
      ORDER BY numwait DESC, s_name
      LIMIT 100
  - Name: Q22
    Description: Query 22
    SQL: |
      WITH avg_tmp AS (
      		SELECT AVG(c_acctbal) AS avg_acctbal
      		FROM customer
      		WHERE c_acctbal > 0.00
      			AND substring(c_phone, 1, 2) IN (
      				'13',
      				'31',
      				'23',
      				'29',
      				'30',
      				'18',
      				'17'
      			)
      	),
      	cus_tmp AS (
      		SELECT c_custkey AS noordercus
      		FROM customer
      			LEFT JOIN v_orders ON c_custkey = o_custkey
      		WHERE o_orderkey IS NULL
      		GROUP BY c_custkey
      	)
      SELECT cntrycode, COUNT(1) AS numcust, SUM(c_acctbal) AS totacctbal
      FROM (
      	SELECT substring(c_phone, 1, 2) AS cntrycode, c_acctbal
      	FROM customer
      		INNER JOIN cus_tmp ON c_custkey = noordercus, avg_tmp
      	WHERE substring(c_phone, 1, 2) IN (
      			'13',
      			'31',
      			'23',
      			'29',
      			'30',
      			'18',
      			'17'
      		)
      		AND c_acctbal > avg_acctbal
      ) t
      GROUP BY cntrycode
      ORDER BY cntrycode