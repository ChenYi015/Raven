AWSTemplateFormatVersion: 2010-09-09
Description: create vpc, subnet and security for emr or ec2 's benchmark
Parameters:
  VpcCidrBlock:
    Type: String
    Default: 10.1.0.0/16
  Subnet01CidrBlock:
    Type: String
    Default: 10.1.0.0/24
  Subnet02CidrBlock:
    Type: String
    Default: 10.1.1.0/24
  Subnet03CidrBlock:
    Type: String
    Default: 10.1.2.0/24
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  BucketFullPath:
    Type: String
    Default: s3://chenyi-ap-southeast-1/kylin4
  BucketPath:
    Type: String
    Default: /chenyi-ap-southeast-1/kylin4
    Description: Url without prefix s3:/
Mappings:
  Region2Az:
    cn-northwest-1:
      '1': cn-northwest-1a
      '2': cn-northwest-1b
    ap-southeast-1:
      '1': ap-southeast-1a
      '2': ap-southeast-1b
      '3': ap-southeast-1c
Resources:
  EC2VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidrBlock
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
        - Key: Project
          Value: Raven
  EC2Subnet01:
    Type: AWS::EC2::Subnet
    DependsOn:
      - EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: !Ref Subnet01CidrBlock
      AvailabilityZone: !FindInMap
        - Region2Az
        - !Ref AWS::Region
        - '1'
      Tags:
        - Key: Project
          Value: Raven
  EC2Subnet02:
    Type: AWS::EC2::Subnet
    DependsOn:
      - EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: !Ref Subnet02CidrBlock
      AvailabilityZone: !FindInMap
        - Region2Az
        - !Ref AWS::Region
        - '2'
      Tags:
        - Key: Project
          Value: Raven
  EC2Subnet03:
    Type: AWS::EC2::Subnet
    DependsOn:
      - EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      CidrBlock: !Ref Subnet03CidrBlock
      AvailabilityZone: !FindInMap
        - Region2Az
        - !Ref AWS::Region
        - '3'
      Tags:
        - Key: Project
          Value: Raven
  EC2InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Project
          Value: Raven
  EC2VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn:
      - EC2VPC
      - EC2InternetGateway
    Properties:
      VpcId: !Ref EC2VPC
      InternetGatewayId: !Ref EC2InternetGateway
  EC2RouteTable:
    Type: AWS::EC2::RouteTable
    DependsOn:
      - EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      Tags:
        - Key: Project
          Value: Raven
  EC2Route:
    Type: AWS::EC2::Route
    DependsOn:
      - EC2InternetGateway
      - EC2RouteTable
    Properties:
      RouteTableId: !Ref EC2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref EC2InternetGateway
  Subnet01RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - EC2Subnet01
      - EC2RouteTable
    Properties:
      SubnetId: !Ref EC2Subnet01
      RouteTableId: !Ref EC2RouteTable
  Subnet02RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - EC2Subnet02
      - EC2RouteTable
    Properties:
      SubnetId: !Ref EC2Subnet02
      RouteTableId: !Ref EC2RouteTable
  Subnet03RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    DependsOn:
      - EC2Subnet03
      - EC2RouteTable
    Properties:
      SubnetId: !Ref EC2Subnet03
      RouteTableId: !Ref EC2RouteTable
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    DependsOn: EC2VPC
    Properties:
      VpcId: !Ref EC2VPC
      GroupDescription: Open up SSH access and specify range of ports to itself
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: 7000
          ToPort: 20000
          CidrIp: 114.212.81.67/32
      Tags:
        - Key: Project
          Value: Raven
  EC2SecurityGroupFullTCPIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn:
      - EC2SecurityGroup
    Properties:
      IpProtocol: tcp
      SourceSecurityGroupId: !Ref EC2SecurityGroup
      FromPort: 0
      ToPort: 65535
      GroupId: !Ref EC2SecurityGroup
  EC2SecurityGroupFullUDPIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn:
      - EC2SecurityGroup
    Properties:
      IpProtocol: udp
      SourceSecurityGroupId: !Ref EC2SecurityGroup
      FromPort: 0
      ToPort: 65535
      GroupId: !Ref EC2SecurityGroup
  EC2SecurityGroupFullICMPIpv4Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Description: special port range from -1 to -1 that means full
    DependsOn:
      - EC2SecurityGroup
    Properties:
      IpProtocol: icmp
      SourceSecurityGroupId: !Ref EC2SecurityGroup
      FromPort: -1
      ToPort: -1
      GroupId: !Ref EC2SecurityGroup
Outputs:
  VpcId:
    Description: the id of VPC
    Value: !Ref EC2VPC
    Export:
      Name: !Join [ ":", [ "Kylin4", "EC2", "VPC" ] ]
  Subnet01ID:
    Description: the id of subnet 01, and this is for emr
    Value: !Ref EC2Subnet01
    Export:
      Name: !Join [ ":", [ "Kylin4", "EC2", "Subnet" ] ]
  Subnet02ID:
    Description: the id of subnet 02, and this is for ec2 nodes
    Value: !Ref EC2Subnet02
  CidrIpOfVPC:
    Description: the cidr block ip of VPC
    Value: !Ref VpcCidrBlock
  CidrIpOfSubnet01:
    Description: the cidr block ip of subnet 01
    Value: !Ref Subnet01CidrBlock
  CidrIpOfSubnet02:
    Description: the cidr block ip of subnet 02
    Value: !Ref Subnet02CidrBlock
  EC2SecurityGroup:
    Description: the id of security group
    Value: !Ref EC2SecurityGroup
    Export:
      Name: !Join [ ":", [ "Kylin4", "EC2", "SecurityGroup" ] ]
