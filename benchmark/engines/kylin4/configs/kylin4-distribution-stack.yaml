AWSTemplateFormatVersion: 2010-09-09
Description: Create Cluster for ec2 instances and deploy related services, hadoop/spark/zookeeper/hive/jdk/kylin4
Parameters:
  AssociatedPublicIp:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  ScriptFileName:
    Type: String
    Default: prepare-ec2-env-for-distribution.sh
  Ec2Mode:
    Type: String
    Default: test
    AllowedValues:
      - test
      - product
    Description: set the flag for Mode, if not test use product's configuration
  Ec2InstanceTypeForDistribution:
    Description: EC2 instance type
    Type: String
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.xlarge
    AllowedValues:
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
  Ec2InstanceTypeForDistributionForTest:
    Description: EC2 instance type
    Type: String
    ConstraintDescription: must be a valid EC2 instance type.
    Default: m5.xlarge
    AllowedValues:
      - m5.xlarge
  Ec2VolumeSizeForDistributionNode:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 30
  Ec2VolumnTypeForDistributionNode:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
      - gp3
      - io1
      - io2
      - sc1
      - st1
      - standard
  Ec2VolumeSizeForDistributionNodeForTest:
    Type: Number
    Default: 20
    MinValue: 20
    MaxValue: 20
  Ec2VolumnTypeForDistributionNodeForTest:
    Type: String
    Default: gp2
    AllowedValues:
      - gp2
Mappings:
  AWSRegionArch2AMI:
    cn-north-1:
      HVMebs: ami-00ac27054b887ff5c
    cn-northwest-1:
      HVMebs: ami-0135cb179d33fbe3e
    ap-southeast-1:
      HVMebs: ami-07191cf2912e097a6
Conditions:
  IsProductMode: !Equals [!Ref Ec2Mode, "product"]
  IsAssociatedPublicIp: !Equals [ !Ref AssociatedPublicIp, "true" ]
Resources:
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName:
        Fn::ImportValue: !Join [ ":", [ "Kylin4", "EC2", "KeyName" ] ]
      InstanceType: !If
        - IsProductMode
        - !Ref Ec2InstanceTypeForDistribution
        - !Ref Ec2InstanceTypeForDistributionForTest
      ImageId: !FindInMap
        - AWSRegionArch2AMI
        - !Ref AWS::Region
        - HVMebs
      IamInstanceProfile:
        Fn::ImportValue: !Join [ ":", [ "Kylin4", "IAM", "InstanceProfile" ] ]
      NetworkInterfaces:
        - DeviceIndex: 0
          Description: Auto create for Master node in benchmark
          AssociatePublicIpAddress: True
          DeleteOnTermination: True
          SubnetId:
            Fn::ImportValue: !Join [ ":", [ "Kylin4", "EC2", "Subnet" ] ]
          GroupSet:
            - Fn::ImportValue: !Join [ ":", [ "Kylin4", "EC2", "SecurityGroup" ] ]
      BlockDeviceMappings:
        - !If
          - IsProductMode
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref Ec2VolumeSizeForDistributionNode
              VolumeType: !Ref Ec2VolumnTypeForDistributionNode
              DeleteOnTermination: true
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref Ec2VolumeSizeForDistributionNodeForTest
              VolumeType: !Ref Ec2VolumnTypeForDistributionNodeForTest
              DeleteOnTermination: true
      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash -xe
              cd /home/ec2-user
              aws s3 cp ${PrivateBucketFullPath}/scripts/${PrivateScriptFileName} . --region ${PrivateRegion}
              bash ${PrivateScriptFileName} --bucket-url ${PrivateBucketPath} --region ${PrivateRegion}
            - PrivateBucketFullPath:
                Fn::ImportValue: !Join [ ":", [ "Kylin4", "S3", "Bucket", "FullPath" ] ]
              PrivateScriptFileName: !Ref ScriptFileName
              PrivateBucketPath:
                Fn::ImportValue: !Join [ ":", [ "Kylin4", "S3", "Bucket", "Path" ] ]
              PrivateRegion: !Ref AWS::Region
      Tags:
        - Key: Project
          Value: Raven
        - Key: Name
          Value: Distribution Node
        - Key: OLAP Engine
          Value: Kylin4
Outputs:
  EC2InstanceID:
    Description: the id of Distribution Node Innstance
    Value: !Ref EC2Instance
  EC2InstancePrivateIp:
    Description: Distribution Private IP
    Value: !GetAtt EC2Instance.PrivateIp
  EC2InstancePublicIp:
    Description: Distribution Public IP
    Value: !GetAtt EC2Instance.PublicIp
    Condition: IsAssociatedPublicIp
  DatabaseHost:
    Description: Database host.
    Value: !GetAtt EC2Instance.PrivateIp
    Export:
      Name: !Join [ ":", [ "Kylin4", "Database", "Host" ] ]
  ZookeeperHost:
    Description: Zookeeper host.
    Value: !GetAtt EC2Instance.PrivateIp
    Export:
      Name: !Join [ ":", [ "Kylin4", "Zookeeper", "Host" ] ]
