# deploy kylin version: v3 or v4
DEPLOY_KYLIN_VERSION: v4

# deploy platform: ec2 or emr
DEPLOY_PLATFORM: ec2

AWS_REGION: ap-southeast-1

# Dangerous Params
ALWAYS_DESTROY_ALL: false # if set to false means that vpc for cluster always retain

# For Debug
CLOUD_ADDR:

# Stack Names
CONSTANTS_STACK: Kylin4-Constants-Stack
VPC_STACK: Kylin4-VPC-Stack
DISTRIBUTION_STACK: Kylin4-Distribution-Stack
MASTER_STACK: Kylin4-Master-Stack
SLAVE_STACK: Kylin4-Slave-Stack
EMR_FOR_KYLIN4_STACK: emr-for-kylin4-stack
EMR_FOR_KYLIN3_STACK: emr-for-kylin3-stack
KYLIN4_STEP_ON_EMR_STACK: kylin4-step-on-emr-stack
SLAVE_SCALE_4_STACK: ec2-slave-04-stack
SLAVE_SCALE_5_STACK: ec2-slave-05-stack
SLAVE_SCALE_6_STACK: ec2-slave-06-stack
RAVEN_CLIENT_STACK: ec2-raven-client-stack

# Init Stack for Raven client, default is false
RAVEN_CLIENT_NEEDED: false

# Backup Params
BackupMetadataBucketFullPath: s3://chenyi-ap-southeast-1/kylin4/backup/ec2/

# Params
EMR_FOR_KYLIN4_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  SubnetId:
  EmrSecurityGroupId:
  # Note: this key pair must be created before run raven
  EMREc2KeyName: key_raven
  ClusterName: kylin4-benchmark-on-emr533
  ClusterInstanceType: m5.xlarge
  EmrAutoScaleRoleName: EMR_AutoScaling_DefaultRole
  EmrSeviceRoleName: EMR_DefaultRole
  EmrJobFlowRole: EMR_EC2_DefaultRole
  EmrEbsRootVolumeSize: '50'
  EmrScalDownBehavior: TERMINATE_AT_TASK_COMPLETION
  EmrMasterInstanceCount: '1'
  EmrMasterInstanceVolumeSize: '50'
  EmrMasterInstanceVolumeType: gp2
  EmrMasterInstancePerInstances: '1'
  EmrCoreInstanceCount: '3'
  EmrCoreInstanceVolumeSize: '50'
  EmrCoreInstanceVolumeType: gp2
  EmrCoreInstancePerInstances: '1'
  EmrHdfsSiteOfDfsReplication: '1'

KYLIN4_STEP_ON_EMR_PARAMS:
  EMRClusterId:

EC2_DISTRIBUTION_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  PublicSubnetID:
  SecurityGroupID:
  EMREc2KeyName: key_raven
  AssociatedPublicIp: 'true'
  # Note: this bucket must be created before run raven
  BucketFullPath: s3://chenyi-ap-southeast-1/kylin4
  BucketPath: /chenyi-ap-southeast-1/kylin4
  DistributionScriptFileName: prepare-ec2-env-for-distribution.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  Ec2InstanceTypeForDistribution: m5.xlarge
  Ec2VolumeSizeForDistributionNode: '20'
  Ec2VolumnTypeForDistributionNode: gp2

EC2_MASTER_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  Ec2DbHost:
  Ec2ZookeeperkHost:
  Ec2InstanceProfile:
  PublicSubnetID:
  SecurityGroupID:

  AssociatedPublicIp: 'true'
  # Must be in [ all, job, query ], default is job for the timeline!!!
  Ec2KylinMode: job

  Ec2DbUser: 'root'
  Ec2DbPassword: '123456'

  # Note: this key pair must be created before run raven
  EMREc2KeyName: key_raven
  Ec2WaitingTime: '400'

  # Note: this bucket must be created before run raven
  BucketFullPath: s3://chenyi-ap-southeast-1/kylin4
  BucketPath: /chenyi-ap-southeast-1/kylin4

  MasterScriptFileName: prepare-ec2-env-for-master.sh
  Ec2Mode: test

  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.xlarge
  Ec2VolumnTypeForMasterNode: gp2
  Ec2VolumeSizeForMasterNode: '30'

EC2_SLAVE_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  MasterNodeHost:
  Ec2InstanceProfile:
  PublicSubnetID:
  SecurityGroupID:
  EMREc2KeyName: key_raven
  # set 'true' for test
  AssociatedPublicIp: 'true'
  WaitingTime: '400'
  # Note: this bucket must be created before run raven
  BucketFullPath: s3://chenyi-ap-southeast-1/kylin4
  BucketPath: /chenyi-ap-southeast-1/kylin4
  SlaveScriptFileName: prepare-ec2-env-for-slave.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.xlarge
  Ec2VolumnTypeForSlaveNode: gp2
  Ec2VolumeSizeForSlaveNode: '30'

EC2_SCALE_SLAVE_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  MasterNodeHost:
  Ec2InstanceProfile:
  PublicSubnetID:
  SecurityGroupID:
  WorkerNum:
  EMREc2KeyName: key_raven
  # set 'true' for test
  AssociatedPublicIp: 'true'
  # Note: this bucket must be created before run raven
  BucketFullPath: s3://chenyi-ap-southeast-1/kylin4
  BucketPath: /chenyi-ap-southeast-1/kylin4
  ScriptFileName: prepare-client-for-raven.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.xlarge
  Ec2VolumnTypeForSlaveNode: gp2
  Ec2VolumeSizeForSlaveNode: '30'

EC2_RAVEN_CLIENT_PARAMS:
  # None value can be passed by the pre-step output, so params need to wait pre-step complete.
  # Note: params details check in related yaml file
  MasterNodeHost:
  Ec2InstanceProfile:
  PublicSubnetID:
  SecurityGroupID:
  EMREc2KeyName: key_raven
  AsscociatedPublicIp: 'true'
  # Note: this bucket must be created before run raven
  BucketFullPath: s3://chenyi-ap-southeast-1/kylin4
  BucketPath: /chenyi-ap-southeast-1/kylin4
  ScriptFileName: prepare-client-for-raven.sh
  Ec2Mode: test
  # followed params is invalid if Ec2Mode(which set in the yaml) is 'test'
  InstanceType: m5.xlarge
  Ec2VolumeSizeForClientNode: '20'
  Ec2VolumnTypeForClientNode: gp2